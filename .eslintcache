[{"/Users/min/React/nomflix/src/index.js":"1","/Users/min/React/nomflix/src/api.js":"2","/Users/min/React/nomflix/src/Components/App.js":"3","/Users/min/React/nomflix/src/Components/Router.js":"4","/Users/min/React/nomflix/src/Components/GlobalStyles.js":"5","/Users/min/React/nomflix/src/Components/Header.js":"6","/Users/min/React/nomflix/src/Routes/Search/index.js":"7","/Users/min/React/nomflix/src/Routes/TV/index.js":"8","/Users/min/React/nomflix/src/Routes/Detail/index.js":"9","/Users/min/React/nomflix/src/Routes/Search/SearchContainer.js":"10","/Users/min/React/nomflix/src/Routes/Detail/DetailContainer.js":"11","/Users/min/React/nomflix/src/Routes/TV/TVContainer.js":"12","/Users/min/React/nomflix/src/Routes/Search/SearchPresenter.js":"13","/Users/min/React/nomflix/src/Routes/TV/TVPresenter.js":"14","/Users/min/React/nomflix/src/Routes/Detail/DetailPresenter.js":"15","/Users/min/React/nomflix/src/Components/Loader.js":"16","/Users/min/React/nomflix/src/Components/Section.js":"17","/Users/min/React/nomflix/src/Components/Poster.js":"18","/Users/min/React/nomflix/src/Components/Message.js":"19","/Users/min/React/nomflix/src/Routes/Movie/index.js":"20","/Users/min/React/nomflix/src/Routes/Movie/MovieContainer.js":"21","/Users/min/React/nomflix/src/Routes/Movie/MoviePresenter.js":"22","/Users/min/React/nomflix/src/Routes/Home/index.js":"23","/Users/min/React/nomflix/src/Routes/Home/HomeContainer.js":"24","/Users/min/React/nomflix/src/Routes/Home/HomePresenter.js":"25","/Users/min/React/nomflix/src/Components/Season.js":"26","/Users/min/React/nomflix/src/Components/VideoSlide.js":"27"},{"size":222,"mtime":1611230508000,"results":"28","hashOfConfig":"29"},{"size":1246,"mtime":1613257367116,"results":"30","hashOfConfig":"29"},{"size":286,"mtime":1611604858000,"results":"31","hashOfConfig":"29"},{"size":871,"mtime":1613047873959,"results":"32","hashOfConfig":"29"},{"size":559,"mtime":1611569723000,"results":"33","hashOfConfig":"29"},{"size":1387,"mtime":1613257097346,"results":"34","hashOfConfig":"29"},{"size":81,"mtime":1611234194000,"results":"35","hashOfConfig":"29"},{"size":70,"mtime":1611233931000,"results":"36","hashOfConfig":"29"},{"size":82,"mtime":1611234430000,"results":"37","hashOfConfig":"29"},{"size":1655,"mtime":1611327408000,"results":"38","hashOfConfig":"29"},{"size":1417,"mtime":1613258763425,"results":"39","hashOfConfig":"29"},{"size":1212,"mtime":1611237265000,"results":"40","hashOfConfig":"29"},{"size":2579,"mtime":1613077150266,"results":"41","hashOfConfig":"29"},{"size":2748,"mtime":1611588123000,"results":"42","hashOfConfig":"29"},{"size":9632,"mtime":1613260689350,"results":"43","hashOfConfig":"29"},{"size":470,"mtime":1611663738000,"results":"44","hashOfConfig":"29"},{"size":795,"mtime":1613259046241,"results":"45","hashOfConfig":"29"},{"size":1890,"mtime":1611566483000,"results":"46","hashOfConfig":"29"},{"size":514,"mtime":1611327724000,"results":"47","hashOfConfig":"29"},{"size":79,"mtime":1613047805830,"results":"48","hashOfConfig":"29"},{"size":1230,"mtime":1613047820929,"results":"49","hashOfConfig":"29"},{"size":2741,"mtime":1613047900451,"results":"50","hashOfConfig":"29"},{"size":75,"mtime":1613048395063,"results":"51","hashOfConfig":"29"},{"size":1260,"mtime":1613055320844,"results":"52","hashOfConfig":"29"},{"size":5092,"mtime":1613076558404,"results":"53","hashOfConfig":"29"},{"size":1419,"mtime":1613258706326,"results":"54","hashOfConfig":"29"},{"size":1018,"mtime":1613260285523,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17m9wcx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/min/React/nomflix/src/index.js",[],["119","120"],"/Users/min/React/nomflix/src/api.js",[],"/Users/min/React/nomflix/src/Components/App.js",[],"/Users/min/React/nomflix/src/Components/Router.js",["121"],"import React from 'react';\nimport {HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport Movie from 'Routes/Movie';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Header from 'Components/Header';\nimport Detail from 'Routes/Detail';\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/movie\" exact component={Movie} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n)","/Users/min/React/nomflix/src/Components/GlobalStyles.js",[],"/Users/min/React/nomflix/src/Components/Header.js",[],"/Users/min/React/nomflix/src/Routes/Search/index.js",[],"/Users/min/React/nomflix/src/Routes/TV/index.js",[],"/Users/min/React/nomflix/src/Routes/Detail/index.js",[],"/Users/min/React/nomflix/src/Routes/Search/SearchContainer.js",["122"],"import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    }\n\n    handleSumit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = (event) => {\n        const {target: {value}} = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async() => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\n            const {data: {results: tvResults}} = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n        } catch {\n            this.setState({\n                error: \"Can't get results\"\n            })\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render(){\n        const { movieResults, tvResults, searchTerm, error, loading} = this.state;\n        return (\n            <SearchPresenter \n            movieResults={movieResults} \n            tvResults={tvResults} \n            searchTerm={searchTerm} \n            error={error} \n            loading={loading} \n            handleSubmit={this.handleSumit}\n            updateTerm={this.updateTerm}\n            />\n        ) \n    }\n}","/Users/min/React/nomflix/src/Routes/Detail/DetailContainer.js",["123"],"import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {location: {pathname}} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        }\n    }\n    \n    async componentDidMount(){\n        const {\n            match: { params: { id } },\n            history: {push}\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie){\n                ({data: result} = await moviesApi.movieDetail(parsedId));\n            }else {\n                ({data: result} = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({\n                error: \"Can't find anything\"\n            });\n        } finally {\n            this.setState({\n                loading: false, result\n            });\n        }\n    }\n\n    render(){\n        const { result, error, loading} = this.state;\n        return (\n            <DetailPresenter \n            result={result} \n            error={error} \n            loading={loading} \n            />\n        ) \n    }\n}","/Users/min/React/nomflix/src/Routes/TV/TVContainer.js",["124"],"import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount(){\n        try {\n            const {data: {results: topRated}} = await tvApi.topRated();\n            const {data: {results: popular}} = await tvApi.popular();\n            const {data: {results: airingToday}} = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        } catch {\n            this.setState({\n                error: \"Can't get Movies\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render(){\n        const { topRated, popular, airingToday, error, loading} = this.state;\n        return (\n            <TVPresenter \n            topRated={topRated} \n            popular={popular} \n            airingToday={airingToday} \n            error={error} \n            loading={loading} \n            />\n        ) \n    }\n}","/Users/min/React/nomflix/src/Routes/Search/SearchPresenter.js",[],"/Users/min/React/nomflix/src/Routes/TV/TVPresenter.js",[],"/Users/min/React/nomflix/src/Routes/Detail/DetailPresenter.js",[],"/Users/min/React/nomflix/src/Components/Loader.js",["125"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoadingBar = styled.div`\n    margin: 0 auto;\n    margin-top: 50px;\n    border: 8px solid #2d3436;\n    border-top: 8px solid #e74c3c; /* Red */\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    animation: spin 2s linear infinite;\n\n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n`;\n\nexport default () => <LoadingBar />;\n","/Users/min/React/nomflix/src/Components/Section.js",[],"/Users/min/React/nomflix/src/Components/Poster.js",[],"/Users/min/React/nomflix/src/Components/Message.js",[],"/Users/min/React/nomflix/src/Routes/Movie/index.js",[],"/Users/min/React/nomflix/src/Routes/Movie/MovieContainer.js",["126"],"import React from \"react\";\nimport MoviePresenter from \"./MoviePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount(){\n        try {\n            const {data: {results: nowPlaying}} = await moviesApi.nowPlaying();\n            const {data: {results: upcoming}} = await moviesApi.upcoming();\n            const {data: {results: popular}} = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"Can't get Movies\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render(){\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\n        return (\n            <MoviePresenter \n            nowPlaying={nowPlaying} \n            upcoming={upcoming} \n            popular={popular} \n            error={error} \n            loading={loading} \n            />\n        ) \n    }\n}","/Users/min/React/nomflix/src/Routes/Movie/MoviePresenter.js",[],"/Users/min/React/nomflix/src/Routes/Home/index.js",[],"/Users/min/React/nomflix/src/Routes/Home/HomeContainer.js",["127"],"import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { trendApi } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        trendMovie: null,\n        trendTV: null,\n        trendPerson: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount(){\n        try {\n            const {data: {results: trendMovie}} = await trendApi.trendMovie();\n            const {data: {results: trendTV}} = await trendApi.trendTV();\n            const {data: {results: trendPerson}} = await trendApi.trendPerson();\n            this.setState({\n                trendMovie,\n                trendTV,\n                trendPerson\n            })\n        } catch {\n            this.setState({\n                error: \"Can't get Trend\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render(){\n        const { trendMovie, trendTV, trendPerson, error, loading} = this.state;\n        return (\n            <HomePresenter \n                trendMovie={trendMovie}\n                trendTV={trendTV}\n                trendPerson={trendPerson}\n                error={error} \n                loading={loading} \n            />\n        ) \n    }\n}","/Users/min/React/nomflix/src/Routes/Home/HomePresenter.js",["128","129"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n    padding: 40px;\n    text-align: center;\n`;\nconst HomeSection = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    padding-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n    display: block;\n    font-size: 18px;\n    margin: 20px 0;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    width: 200px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Name = styled.span`\n    position:absolute;\n    bottom:5px;\n    right: 5px;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst Nummer = styled.span`\n    position:absolute;\n    top:5px;\n    left: 5px;\n    opacity: 0;\n    font-size: 50px;\n    font-weight: 600;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    &:hover {\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Nummer} {\n            opacity: 0.5;\n        }\n        ${Name} {\n            opacity: 1;\n        }\n    }\n    position: relative;\n`;\n\nconst HomePresenter = ({\n    trendMovie, trendTV, trendPerson, loading, error\n}) => (\n    <>\n        <Helmet>\n            <title>Home | Nomflix</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n        <Container>\n            <Title>Today's Trend Movies </Title>\n            { trendMovie && trendMovie.length > 0 && (\n                <HomeSection>\n                    {\n                        trendMovie\n                        .sort((a, b) => {return b.popularity - a.popularity})\n                        .filter(movie => movie.poster_path !== null)\n                        .map((movie, index) =>\n                            index < 3 &&\n                            <Link to={`/movie/${movie.id}`}>\n                                <ImageContainer>\n                                    <Image bgUrl={movie.poster_path \n                                    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                                    : require(\"../../assets/noPosterSmall.png\").default} />\n                                    <Nummer>{index + 1}</Nummer>\n                                    <Name>{movie.title}</Name>\n                                </ImageContainer>\n                            </Link>\n                        )\n                    }\n                </HomeSection>\n            )}\n            <Title>Today's Trend Shows</Title>\n            { trendTV && trendTV.length > 0 && (\n                <HomeSection>\n                    {\n                        trendTV\n                        .sort((a, b) => {return b.popularity - a.popularity})\n                        .filter(tv => tv.poster_path !== null)\n                        .map((tv, index) =>\n                            index < 3 &&\n                            <Link to={`/show/${tv.id}`}>\n                                <ImageContainer>\n                                    <Image bgUrl={tv.poster_path \n                                        ? `https://image.tmdb.org/t/p/w300${tv.poster_path}`\n                                        : require(\"../../assets/noPosterSmall.png\").default} />\n                                    <Nummer>{index + 1}</Nummer>\n                                    <Name>{tv.name}</Name>\n                                </ImageContainer>\n                            </Link>\n                            \n                        )\n                    }\n                </HomeSection>\n            )}\n            <Title>Today's Trend Stars</Title>\n            { trendPerson && trendPerson.length > 0 && (\n                <HomeSection>\n                        {\n                            trendPerson\n                            .sort((a, b) => {return b.popularity - a.popularity})\n                            .filter(person => person.profile_path !== null)\n                            .map((person, index) =>\n                                index < 3 &&\n                                <ImageContainer>\n                                <Image bgUrl={person.profile_path \n                                    ? `https://image.tmdb.org/t/p/w235_and_h235_face/${person.profile_path}`\n                                    : require(\"../../assets/noPosterSmall.png\").default} />\n                                <Name>{person.name}</Name>\n                                </ImageContainer>\n                            )\n                        }\n                </HomeSection>\n            )}\n        </Container>\n        )}\n    </>\n);\n\nHomePresenter.propTypes = {\n    trendMovie:PropTypes.object,\n    trendTV:PropTypes.object,\n    trendPerson:PropTypes.object,\n    loading:PropTypes.bool.isRequired, \n    error:PropTypes.string\n}\n\nexport default HomePresenter;","/Users/min/React/nomflix/src/Components/Season.js",[],"/Users/min/React/nomflix/src/Components/VideoSlide.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":10,"column":1,"nodeType":"136","endLine":24,"endColumn":2},{"ruleId":"134","severity":1,"message":"137","line":5,"column":1,"nodeType":"136","endLine":62,"endColumn":2},{"ruleId":"134","severity":1,"message":"137","line":5,"column":1,"nodeType":"136","endLine":56,"endColumn":2},{"ruleId":"134","severity":1,"message":"137","line":5,"column":1,"nodeType":"136","endLine":47,"endColumn":2},{"ruleId":"134","severity":1,"message":"135","line":20,"column":1,"nodeType":"136","endLine":20,"endColumn":37},{"ruleId":"134","severity":1,"message":"137","line":5,"column":1,"nodeType":"136","endLine":47,"endColumn":2},{"ruleId":"134","severity":1,"message":"137","line":5,"column":1,"nodeType":"136","endLine":47,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"142","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-unused-vars","'Section' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","no-global-assign","no-unsafe-negation"]